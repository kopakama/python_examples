Создание проекта: $ django-admin startproject <название> .

Запуск сервера: $ python3 manage.py runserver
    Чтобы сервер был доступе на других устройствах сети:
    $ python3 manage.py runserver 0:8000

Создать приложение опросов: $ python3 manage.py startapp polls

Совершить миграцию: $ python3 manage.py makemigrations (<название приложения> для 1 раза)
    Если выбор, 1 и далее ''

Подтвердить миграцию: $ python3 manage.py migrate

Увидеть отчет миграции в sql: $ python3 manage.py sqlmigrate polls 0001

Проверка на ошибки проекта: $ python3 manage.py check

Интерактивная оболочка django: $ python3 manage.py shell

Вывод всех строк таблицы: <название>.objects.all()

Вывод отфильтрованного массива: <название>.objects.filter(id=1) или (pk=1)

Вывод массива, элементы которого начинаются с ..: <название>.objects.filter(question_text__startswith='What')

Вывод одной строки: <название>.objects.get(timezone.now().year=current_year)

Создание строки и сохранение:
    >>> q = Question(question_text="What's new?", pub_date=timezone.now())
    >>> q.save()

Создание связанной таблицы:
    # Display any choices from the related object set -- none so far.
    >>> q.choice_set.all()
    <QuerySet []>

    # Create three choices.
    >>> q.choice_set.create(choice_text='Not much', votes=0)
    <Choice: Not much>
    >>> q.choice_set.create(choice_text='The sky', votes=0)
    <Choice: The sky>
    >>> c = q.choice_set.create(choice_text='Just hacking again', votes=0)

    # Choice objects have API access to their related Question objects.
    >>> c.question
    <Question: What's up?>

    # And vice versa: Question objects get access to Choice objects.
    >>> q.choice_set.all()
    <QuerySet [<Choice: Not much>, <Choice: The sky>, <Choice: Just hacking again>]>
    >>> q.choice_set.count()
    3

    >>> Choice.objects.filter(question__pub_date__year=current_year)
    <QuerySet [<Choice: Not much>, <Choice: The sky>, <Choice: Just hacking again>]>

    # Let's delete one of the choices. Use delete() for that.
    >>> c = q.choice_set.filter(choice_text__startswith='Just hacking')
    >>> c.delete()

Создание пользователя-администратора: $ python3 manage.py createsuperuser