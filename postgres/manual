bash: initdb don't found:
$ cd ~
$ vim .profile
PATH=$PATH:/usr/lib/postgresql/{version}/bin
export PATH
$ . ~/.profile

Запуск:
$ sudo -u postgres psql postgres

Пароль:
sudo passwd postgres
su - postgres

Процессы:
ps -ef | grep postgres

Состояние сервера:
sudo service postgresql restart
sudo service postgresql start
sudo service postgresql stop

Инит кластера данных:
root# mkdir /usr/local/pgsql
root# chown postgres /usr/local/pgsql
root# su postgres
postgres$ initdb -D /usr/local/pgsql/data

Запуск сервера базы данных:
pg_ctl start -l logfile,
postgres -D /usr/local/pgsql/data

/**** PSQL ****/

\l - список баз
\dt - список таблиц
\dp - список таблиц с правами доступа
\conninfo - информация о текущем подключении к базе данных.
\dg - выводит список ролей базы данных
\d имя_таблицы - содержимое таблицы

/**** DB AGENCY ****/


/**** PG_BASEBACKUP ****/
Предназначен для создания резервных копий работающего кластера баз данных PostgreSQL.

Примеры:
Создание резервной копии сервера mydbserver и сохранение её в локальном каталоге /usr/local/pgsql/data:
$ pg_basebackup -h mydbserver -D /usr/local/pgsql/data

Создание резервной копии локального сервера в отдельных сжатых файлах tar для каждого табличного пространства и сохранение их в каталоге backup с индикатором прогресса в процессе выполнения:
$ pg_basebackup -D backup -Ft -z -P

Создание резервной копии локальной базы данных с одним табличным пространством и сжатие её с помощью bzip2:
$ pg_basebackup -D - -Ft -X fetch | bzip2 > backup.tar.bz2

Создание резервной копии локальной базы данных с перемещением табличного пространства /opt/ts в ./backup/ts:
$ pg_basebackup -D backup/data -T /opt/ts=$(pwd)/backup/ts

/**** PG_DUMPALL ****/
Утилита pg_dumpall предназначена для записи («выгрузки») всех баз данных кластера PostgreSQL в один файл в формате скрипта. Этот файл содержит команды SQL, так что передав его на вход psql, можно восстановить все базы данных. Для формирования этого файла вызывается pg_dump для каждой базы данных в кластере. pg_dumpall также выгружает глобальные объекты, общие для всех баз данных, то есть роли и табличные пространства.

-a - Выгружать только данные, без схемы
-f имя_файла - Направить вывод в указанный файл.
-g - Выгружать только глобальные объекты (роли и табличные пространства), без баз данных.
-t - Выгружать только табличные пространства, без баз данных и ролей.
--column-inserts - Выгружать данные в виде команд INSERT с явно задаваемыми именами столбцов

Пример:
Выгрузка всех баз данных:
$ pg_dumpall > db.out
Загрузить базы данных из этого файла можно так:
$ psql -f db.out postgres

/**** PG_DUMP ****/
Программа для создания резервных копий базы данных PostgreSQL. Она создаёт целостные копии, даже если база параллельно используется. Программа pg_dump не препятствует доступу других пользователей к базе данных (ни для чтения, ни для записи).

Примеры:
Выгрузка базы данных mydb в файл SQL-скрипта:
$ pg_dump mydb > db.sql

Восстановление из ранее полученного скрипта в чистую базу newdb:
$ psql -d newdb -f db.sql


